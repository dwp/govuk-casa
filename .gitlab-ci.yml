include:
  - project: dwp/engineering/pipeline-solutions/gitlab/functions
    ref: next
    file:
      - functions/node.yml
      - functions/auto-tag-merge.yml

variables:
  NODE_IMAGE: node:20.11.0@sha256:fd0115473b293460df5b217ea73ff216928f2b0bb7650c5e7aa56aae4c028426
  NODE_PUBLISH_TO_GITLAB: "true"
  NODE_PUBLISH_TO_NPMJS: "true"
  AUTO_TAG_MERGE_PREPARE_MR: "true"
  # Can remove this feature flag once all linters have reached maturity
  DWP_FF_POLICY_DEV211: "true"

# ------------------------------------------------------------------ custom jobs

# Unit tests on other supported node versions
unit-test:
  extends: .node-common
  parallel:
    matrix:
      - node_image_version: node:18.19.0@sha256:2a13079c6393cd19adfd8d362fac004b2d0eed462f3c3fedfad2c0d0de17b429
  stage: unit-test
  image: $node_image_version
  script:
    - node --version
    - npm --version
    - !reference [.node-init, script]
    - npm test

# ZAP scans
e2e-dast:
  extends: .node-common
  stage: security-dynamic-analysis
  image: $NODE_IMAGE
  tags:
    - docker
  needs: []
  services:
    # The image is broken from `owasp/zap2docker-stable:s2023-02-06` onwards,
    # which conincides with when ZAP starts to build multi-platform images.
    # DO NOT UPDATE THIS IMAGE UNTIL SOURCES ARE FIXED.
    # - name: owasp/zap2docker-stable@sha256:072670c616a33c5a5d985a8790738de76191d4e3222e19dc19f50026b5440436
    - name: ghcr.io/zaproxy/zaproxy:bare@sha256:24a4037a3e8607d9fedbd75e4a7f1336d11998e1c331aab9991ef074f5de4b22
      alias: zap
      entrypoint: ["zap.sh"]
      command:
        [
          "-daemon",
          "-host",
          "0.0.0.0",
          "-port",
          "8080",
          "-config",
          "api.key=secret",
          "-config",
          "api.addrs.addr.name=.*",
          "-config",
          "api.addrs.addr.regex=true",
        ]
  variables:
    # ref: https://docs.gitlab.com/runner/executors/docker.html#create-a-network-for-each-job
    # Required so ZAP can connect to servers being spun up in this build container
    FF_NETWORK_PER_BUILD: 1
  before_script:
    - apt-get update
    - apt-get install -y jq
  script:
    - !reference [.node-init, script]
    - "until wget -qO- --header 'X-ZAP-Api-Key: secret' http://zap:8080/JSON/core/view/zapHomePath >/dev/null 2>&1; do echo 'Waiting for ZAP ...'; sleep 1; done"
    - ./node_modules/.bin/spiderplan --worker-init ./tests/e2e/worker-init.js --language en ./tests/e2e/personas/**/traversal.yaml --workers 1 --zap --zap-proxy 'http://zap:8080/' --zap-target-hostname "$(hostname)"
    - "wget -qO- --header 'X-ZAP-Api-Key: secret' http://zap:8080/OTHER/core/other/jsonreport > gl-dast-report.json"
    - "wget -qO- --header 'X-ZAP-Api-Key: secret' http://zap:8080/OTHER/core/other/htmlreport > gl-dast-report.html"
    - if [[ "$(jq '[.site[].alerts[].riskcode | select(. | tonumber >= 3)] | length' gl-dast-report.json)" -ne "0" ]]; then echo 'Found HIGH or CRITICAL vulnerabilities reported. Job failed.'; exit 1; fi
  artifacts:
    when: always
    expire_in: 3 months
    paths:
      - gl-dast-report.html
      - gl-dast-report.json
    reports:
      dast:
        - gl-dast-report.json

# API documentation, published on GitLab Pages
pages:
  stage: publish
  extends: .node-common
  script: npm run build:api-docs -- -d ./public/ || true
  artifacts:
    paths:
      - public
