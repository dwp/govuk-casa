include:
  - project: dwp/engineering/pipeline-solutions/gitlab/functions
    ref: 3.55.4
    file: functions/node.yml
  - project: dwp/engineering/pipeline-solutions/gitlab/functions
    ref: 3.55.4
    file: functions/auto-tag-merge.yml

variables:
  NODE_IMAGE: node:18.12.0@sha256:cef9966b19672effeafcf1a67b8add742c3e46ca7dd5532efff60820526c2e95
  NODE_PUBLISH_TO_GITLAB: "true"
  NODE_PUBLISH_TO_NPMJS: "true"
  AUTO_TAG_MERGE_PREPARE_MR: "true"

# ---------------------------------------------------------- blueprint overrides

node-coverage:
  variables:
    TEST_EXECUTABLE: 'npm run test'

# This is an OSS project so the @dwp scope point to public npm registry. However
# for publishing to the internal GitLab we need to remove that specific config.
node-publish-gitlab:
  before_script:
    - if [ -f .npmrc ]; then sed -i.bak '/^@dwp:registry.*$/d' .npmrc; fi

# ------------------------------------------------------------------ custom jobs

# Unit tests on other supported node versions
unit-test:
  extends: .node-common
  parallel:
    matrix:
      - node_image_version: node:14@sha256:f11e8dbf2ff6668927aafd90a804bf6597d8fe53dc16742a234045f7bf647a8c
      - node_image_version: node:16@sha256:7f404d09ceb780c51f4fac7592c46b8f21211474aacce25389eb0df06aaa7472
  stage: unit-test
  image: $node_image_version
  script:
    - node --version
    - npm --version
    - npm test

# ZAP scans
e2e-dast:
  stage: security-dynamic-analysis
  image: $NODE_IMAGE
  tags:
    - docker
  services:
    - name: owasp/zap2docker-stable@sha256:7eafedf6d7e15cf98b38aa501f63d13bed6b471027755c8a5fdb2631b5060f57
      alias: zap
      entrypoint: [""]
      command: ["zap.sh", "-daemon", "-host", "0.0.0.0", "-port", "8080", "-config", "api.key=secret", "-config", "api.addrs.addr.name=.*", "-config", "api.addrs.addr.regex=true"]
  needs:
    - node-modules
  variables:
    # ref: https://docs.gitlab.com/runner/executors/docker.html#create-a-network-for-each-job
    # Required so ZAP can connect to servers being spun up in this build container
    FF_NETWORK_PER_BUILD: 1
  before_script:
    - apt-get update
    - apt-get install -y jq
  script:
    - "until wget -qO- --header 'X-ZAP-Api-Key: secret' http://zap:8080/JSON/core/view/zapHomePath >/dev/null 2>&1; do echo 'Waiting for ZAP ...'; sleep 1; done"
    - ./node_modules/.bin/spiderplan --worker-init ./tests/e2e/worker-init.js --language en ./tests/e2e/personas/**/traversal.yaml --workers 1 --zap --zap-proxy 'http://zap:8080/' --zap-target-hostname "$(hostname)"
    - "wget -qO- --header 'X-ZAP-Api-Key: secret' http://zap:8080/OTHER/core/other/jsonreport > gl-dast-report.json"
    - "wget -qO- --header 'X-ZAP-Api-Key: secret' http://zap:8080/OTHER/core/other/htmlreport > gl-dast-report.html"
    - if [[ "$(jq '[.site[].alerts[].riskcode | select(. | tonumber >= 3)] | length' gl-dast-report.json)" -ne "0" ]]; then echo 'Found HIGH or CRITICAL vulnerabilities reported. Job failed.'; exit 1; fi
  artifacts:
    when: always
    expire_in: 3 months
    paths:
      - gl-dast-report.html
      - gl-dast-report.json
    reports:
      dast:
        - gl-dast-report.json

# API documentation, published on GitLab Pages
pages:
  stage: publish
  extends: .node-common
  script: npm run build:api-docs -- -d ./public/ || true
  artifacts:
    paths:
      - public
