{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}

{# Build up fieldset attributes #}
{% set fieldsetAttributes = params.fieldset or {} %}

{% call govukFieldset(fieldsetAttributes) %}
  {% set fieldAddress1Errors = params.casaErrors[params.name+"[address1]"] %}
  {% set fieldAddress2Errors = params.casaErrors[params.name+"[address2]"] %}

  <div class="govuk-form-group{{ " govuk-form-group--error" if (fieldAddress1Errors or fieldAddress2Errors) else "" }}">
    {# Line 1 #}
    {% set fieldAttributes = {} %}
    {% if fieldAddress1Errors %}
      {% set fieldAttributes = mergeObjects(fieldAttributes, {'data-validation': {fn: params.name + '[address1]', va: fieldAddress1Errors[0].validator} | dump}) %}
    {% endif %}
    {{ govukInput(mergeObjects({
      label: {
        html: t('macros:postalAddressObject.address1')
      },
      attributes: fieldAttributes,
      errorMessage: {
        text: t(fieldAddress1Errors[0].inline, fieldAddress1Errors[0].variables),
        attributes: {
          'data-ga-question': t('macros:postalAddressObject.address1') | striptags
        } if params.casaWithAnalytics else {}
      } if fieldAddress1Errors else null
    }, params.address1 if params.address1 else {}, {
      id: 'f-' + params.name + '[address1]',
      name: params.name + '[address1]',
      value: params.value.address1
    })) }}

    {# Line 2 #}
    {% set fieldAttributes = {} %}
    {% if fieldAddress2Errors %}
      {% set fieldAttributes = mergeObjects(fieldAttributes, {'data-validation': {fn: params.name + '[address2]', va: fieldAddress2Errors[0].validator} | dump}) %}
    {% endif %}
    {{ govukInput(mergeObjects({
      label: {
        html: t('macros:postalAddressObject.address2')
      },
      attributes: fieldAttributes,
      errorMessage: {
        text: t(fieldAddress2Errors[0].inline, fieldAddress2Errors[0].variables),
        attributes: {
          'data-ga-question': t('macros:postalAddressObject.address2') | striptags
        } if params.casaWithAnalytics else {}
      } if fieldAddress2Errors else null
    }, params.address2 if params.address2 else {}, {
      id: 'f-' + params.name + '[address2]',
      name: params.name + '[address2]',
      value: params.value.address2
    })) }}
  </div>

  {# Town #}
  {% set fieldErrors = params.casaErrors[params.name+"[address3]"] %}
  {% set fieldAttributes = {} %}
  {% if fieldErrors %}
    {% set fieldAttributes = mergeObjects(fieldAttributes, {'data-validation': {fn: params.name + '[address3]', va: fieldErrors[0].validator} | dump}) %}
  {% endif %}
  {{ govukInput(mergeObjects({
    classes: "govuk-!-width-two-thirds",
    label: {
      html: t('macros:postalAddressObject.address3')
    },
    attributes: fieldAttributes,
    errorMessage: {
      text: t(fieldErrors[0].inline, fieldErrors[0].variables),
      attributes: {
        'data-ga-question': t('macros:postalAddressObject.address3')
      } if params.casaWithAnalytics else {}
    } if fieldErrors else null
  }, params.address3 if params.address3 else {}, {
    id: 'f-' + params.name + '[address3]',
    name: params.name + '[address3]',
    value: params.value.address3
  })) }}

  {# County #}
  {% set fieldErrors = params.casaErrors[params.name+"[address4]"] %}
  {% set fieldAttributes = {} %}
  {% if fieldErrors %}
    {% set fieldAttributes = mergeObjects(fieldAttributes, {'data-validation': {fn: params.name + '[address4]', va: fieldErrors[0].validator} | dump}) %}
  {% endif %}
  {{ govukInput(mergeObjects({
    classes: "govuk-!-width-two-thirds",
    label: {
      html: t('macros:postalAddressObject.address4')
    },
    attributes: fieldAttributes,
    errorMessage: {
      text: t(fieldErrors[0].inline, fieldErrors[0].variables),
      attributes: {
        'data-ga-question': t('macros:postalAddressObject.address4')
      } if params.casaWithAnalytics else {}
    } if fieldErrors else null
  }, params.address4 if params.address4 else {}, {
    id: 'f-' + params.name + '[address4]',
    name: params.name + '[address4]',
    value: params.value.address4
  })) }}

  {# Postcode #}
  {% set fieldErrors = params.casaErrors[params.name+"[postcode]"] %}
  {% set fieldAttributes = {} %}
  {% if fieldErrors %}
    {% set fieldAttributes = mergeObjects(fieldAttributes, {'data-validation': {fn: params.name + '[postcode]', va: fieldErrors[0].validator} | dump}) %}
  {% endif %}
  {{ govukInput(mergeObjects({
    classes: "govuk-input--width-10",
    label: {
      html: t('macros:postalAddressObject.postcode')
    },
    attributes: fieldAttributes,
    errorMessage: {
      text: t(fieldErrors[0].inline, fieldErrors[0].variables),
      attributes: {
        'data-ga-question': t('macros:postalAddressObject.postcode')
      } if params.casaWithAnalytics else {}
    } if fieldErrors else null
  }, params.postcode if params.postcode else {}, {
    id: 'f-' + params.name + '[postcode]',
    name: params.name + '[postcode]',
    value: params.value.postcode
  })) }}
{% endcall %}
